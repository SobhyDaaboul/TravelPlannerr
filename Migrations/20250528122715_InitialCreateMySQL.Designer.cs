// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelPlannerr.Data;

#nullable disable

namespace TravelPlannerr.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250528122715_InitialCreateMySQL")]
    partial class InitialCreateMySQL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TravelPlanner.Models.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AverageRating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("BestTimeToVisit")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageRating = 4.8m,
                            BestTimeToVisit = "Apr-Jun, Sep-Oct",
                            City = "Paris",
                            Country = "France",
                            Description = "The City of Light offers iconic landmarks like the Eiffel Tower, world-class museums, charming cafés, and romantic Seine river cruises.",
                            ImagePath = "https://images.unsplash.com/photo-1502602898536-47ad22581b52?w=800&h=600&fit=crop",
                            Name = "Paris",
                            ReviewCount = 2156
                        },
                        new
                        {
                            Id = 2,
                            AverageRating = 4.9m,
                            BestTimeToVisit = "Mar-May, Sep-Nov",
                            City = "Tokyo",
                            Country = "Japan",
                            Description = "A vibrant metropolis blending ancient traditions with cutting-edge technology, featuring incredible cuisine, temples, and modern skyscrapers.",
                            ImagePath = "https://images.unsplash.com/photo-1540959733332-eab4deabeeaf?w=800&h=600&fit=crop",
                            Name = "Tokyo",
                            ReviewCount = 1843
                        },
                        new
                        {
                            Id = 3,
                            AverageRating = 4.7m,
                            BestTimeToVisit = "Apr-Jun, Sep-Nov",
                            City = "New York",
                            Country = "USA",
                            Description = "The city that never sleeps offers Broadway shows, world-famous museums, Central Park, and the iconic Statue of Liberty.",
                            ImagePath = "https://images.unsplash.com/photo-1496442226666-8d4d0e62e6e9?w=800&h=600&fit=crop",
                            Name = "New York",
                            ReviewCount = 3241
                        },
                        new
                        {
                            Id = 4,
                            AverageRating = 4.6m,
                            BestTimeToVisit = "Nov-Apr",
                            City = "Dubai",
                            Country = "UAE",
                            Description = "A luxury destination with stunning architecture, world-class shopping, desert adventures, and pristine beaches.",
                            ImagePath = "https://images.unsplash.com/photo-1512453979798-5ea266f8880c?w=800&h=600&fit=crop",
                            Name = "Dubai",
                            ReviewCount = 1567
                        },
                        new
                        {
                            Id = 5,
                            AverageRating = 4.8m,
                            BestTimeToVisit = "Apr-Jun, Sep-Oct",
                            City = "Rome",
                            Country = "Italy",
                            Description = "The Eternal City showcases ancient history with the Colosseum, Vatican City, incredible cuisine, and Renaissance art.",
                            ImagePath = "https://images.unsplash.com/photo-1552832230-c0197dd311b5?w=800&h=600&fit=crop",
                            Name = "Rome",
                            ReviewCount = 2890
                        },
                        new
                        {
                            Id = 6,
                            AverageRating = 4.9m,
                            BestTimeToVisit = "Apr-Oct",
                            City = "Denpasar",
                            Country = "Indonesia",
                            Description = "Tropical paradise with stunning beaches, ancient temples, lush rice terraces, and vibrant culture perfect for relaxation.",
                            ImagePath = "https://images.unsplash.com/photo-1537953773345-d172ccf13cf1?w=800&h=600&fit=crop",
                            Name = "Bali",
                            ReviewCount = 1234
                        });
                });

            modelBuilder.Entity("TravelPlanner.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "228 Rue de Rivoli, Paris",
                            Description = "Luxury hotel near Louvre",
                            DestinationId = 1,
                            ImagePath = "https://images.unsplash.com/photo-1564501049412-61c2a3083791?w=400&h=300&fit=crop",
                            Name = "Hotel Le Meurice",
                            PricePerNight = 450m,
                            Rating = 4.8m
                        },
                        new
                        {
                            Id = 2,
                            Address = "17 Boulevard Poissonnière, Paris",
                            Description = "Boutique hotel in historic district",
                            DestinationId = 1,
                            ImagePath = "https://images.unsplash.com/photo-1571896349842-33c89424de2d?w=400&h=300&fit=crop",
                            Name = "Hotel des Grands Boulevards",
                            PricePerNight = 220m,
                            Rating = 4.5m
                        },
                        new
                        {
                            Id = 3,
                            Address = "3-7-1-2 Nishi Shinjuku, Tokyo",
                            Description = "Luxury hotel with city views",
                            DestinationId = 2,
                            ImagePath = "https://images.unsplash.com/photo-1566073771259-6a8506099945?w=400&h=300&fit=crop",
                            Name = "Park Hyatt Tokyo",
                            PricePerNight = 380m,
                            Rating = 4.9m
                        },
                        new
                        {
                            Id = 4,
                            Address = "1-12-2 Dogenzaka, Shibuya, Tokyo",
                            Description = "Modern hotel in Shibuya",
                            DestinationId = 2,
                            ImagePath = "https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=300&fit=crop",
                            Name = "Shibuya Excel Hotel Tokyu",
                            PricePerNight = 180m,
                            Rating = 4.3m
                        },
                        new
                        {
                            Id = 5,
                            Address = "768 5th Ave, New York",
                            Description = "Iconic luxury hotel",
                            DestinationId = 3,
                            ImagePath = "https://images.unsplash.com/photo-1542314831-068cd1dbfeeb?w=400&h=300&fit=crop",
                            Name = "The Plaza",
                            PricePerNight = 520m,
                            Rating = 4.7m
                        },
                        new
                        {
                            Id = 6,
                            Address = "230 E 51st St, New York",
                            Description = "Modern budget-friendly option",
                            DestinationId = 3,
                            ImagePath = "https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?w=400&h=300&fit=crop",
                            Name = "Pod Hotels",
                            PricePerNight = 120m,
                            Rating = 4.2m
                        });
                });

            modelBuilder.Entity("TravelPlanner.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TravelPlanner.Models.Hotel", b =>
                {
                    b.HasOne("TravelPlanner.Models.Destination", "Destination")
                        .WithMany("Hotels")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelPlanner.Models.Destination", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
